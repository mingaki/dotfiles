# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

set -g @continuum-restore 'off'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# options
set -g default-terminal "${TERM}"
set -g default-command "${SHELL}" # start a non-login shell by default
set -g focus-events on
set -g detach-on-destroy off
set -g base-index 1
setw -g pane-base-index 1
set -g mouse on
set -g status-keys emacs
set -g status-interval 1
setw -g mode-keys vi
set -g renumber-windows on
set -s escape-time 1

# keymaps
set -g prefix C-q
unbind C-b

bind -n S-Enter send-keys Escape "[13;2u"
bind -n C-Enter send-keys Escape "[13;5u"

bind C-r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display ".tmux.conf reloaded!"

bind s display-popup -E "$MY_BINS/tmux-switch-session.sh"
bind C-s display-popup -E "ti"

bind g run-shell "$MY_BINS/tmux-lazygit.sh"

# remove confirm step when killing a window or pane
bind & kill-window
bind x kill-pane

# Window related bindings
# Open a new pane or window with the current directory of the current pane,
# not the directory in which the first tmux session was started.
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind 0 select-pane -t 1 \; resize-pane -Z

bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# -------------------------------------------------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# and https://github.com/mrjones2014/smart-splits.nvim#tmux
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -n C-Left if-shell "$is_vim" 'send-keys C-Left' 'resize-pane -L 3'
bind-key -n C-Down if-shell "$is_vim" 'send-keys C-Down' 'resize-pane -D 3'
bind-key -n C-Up if-shell "$is_vim" 'send-keys C-Up' 'resize-pane -U 3'
bind-key -n C-Right if-shell "$is_vim" 'send-keys C-Right' 'resize-pane -R 3'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
# -------------------------------------------------------------------------

# theme 
set -g status-justify left
set -g status-position bottom
set -g status-style 'bg=default,fg=blue'
set -g pane-active-border-style "fg=brightgreen,bg=default"
set -g pane-border-style "fg=gray,bg=default"

set -g status-left-length 80
set -g status-left "#{prefix_highlight}"
set -ga status-left "#[fg=green,bg=default,bold] #S "
set -ga status-left "#[fg=brightblue,nobold] #P/#{window_panes} 󰁕 "

# set -g status-right "#[fg=white,nobold]#(gitmux -timeout 500ms -cfg $HOME/.config/tmux/gitmux.conf) "
set -g status-right "#[fg=blue,bold]#H"

set -g message-style bg=default,fg=blue
set -g message-command-style bg=default,fg=blue

# windows
set -g window-status-separator '#[fg=gray]|'
set -g window-status-format "#[fg=blue,nobold,bg=default] #I:#W "
set -g window-status-current-format "#[fg=yellow,bold,italics,bg=default] #I:#W "

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

